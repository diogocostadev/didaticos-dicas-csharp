syntax = "proto3";

option csharp_namespace = "Dica56_gRPC";

package streaming;

import "google/protobuf/timestamp.proto";

// The streaming service definition.
service StreamingService {
  // Real-time data streaming
  rpc StreamData (StreamDataRequest) returns (stream DataPoint);
  
  // Upload file in chunks
  rpc UploadFile (stream FileChunk) returns (UploadResponse);
  
  // Bidirectional chat
  rpc Chat (stream ChatMessage) returns (stream ChatMessage);
  
  // Live metrics monitoring
  rpc MonitorMetrics (MetricsRequest) returns (stream MetricUpdate);
}

message StreamDataRequest {
  string data_type = 1;
  int32 interval_seconds = 2;
  int32 duration_seconds = 3;
}

message DataPoint {
  string id = 1;
  string name = 2;
  double value = 3;
  string unit = 4;
  google.protobuf.Timestamp timestamp = 5;
  map<string, string> metadata = 6;
}

message FileChunk {
  string file_name = 1;
  bytes data = 2;
  int32 chunk_number = 3;
  bool is_last_chunk = 4;
}

message UploadResponse {
  string file_id = 1;
  string file_name = 2;
  int64 file_size = 3;
  string status = 4;
  string message = 5;
}

message ChatMessage {
  string id = 1;
  string user_id = 2;
  string user_name = 3;
  string message = 4;
  string room_id = 5;
  google.protobuf.Timestamp timestamp = 6;
  ChatMessageType type = 7;
}

message MetricsRequest {
  repeated string metric_names = 1;
  int32 interval_seconds = 2;
}

message MetricUpdate {
  string metric_name = 1;
  double value = 2;
  string unit = 3;
  google.protobuf.Timestamp timestamp = 4;
  map<string, string> labels = 5;
}

enum ChatMessageType {
  TEXT = 0;
  JOIN = 1;
  LEAVE = 2;
  SYSTEM = 3;
}
